Queries
1. List all the columns of the Salespeople table.
-->describe salespeople;

2. List all customers with a rating of 100.
-->select cname from customer where rating=100;

3. Find all records in the Customer table with NULL values in the city column.
-->select * from customer where city is null;
-->select * from customer where city=null;

4. Find the largest order taken by each salesperson on each date.
-->select o.onum,o.amt,o.odate,o.cnum,c.snum,max(o.amt) from orders o,customer c where o.cnum=c.cnum group by snum,odate;

5. Arrange the Orders table by descending customer number.
-->select * from orders order by cnum desc;

6. Find which salespeople currently have orders in the Orders table.
-->select c.snum from orders o,customer c where o.cnum=c.cnum;
-->select distinct c.snum from orders o,customer c where o.cnum=c.cnum;

7. List names of all customers matched with the salespeople serving them.
-->select c.cnum,c.cname,s.sname,s.snum from customer c ,salespeople s where c.snum=s.snum;

8. Find the names and numbers of all salespeople who had more than one customer.
-->select c.snum,s.sname,count(s.snum) from salespeople s,customer c where c.snum=s.snum group by c.snum having count(s.snum)>1;

9. Count the orders of each of the salespeople and output the results in descending order.
-->select c.snum,count(o.onum) as total from orders o,customer c where o.cnum=c.cnum group by c.snum order by total desc;

10. List the Customer table if and only if one or more of the customers in the Customer table are
located in San Jose.
-->select * from customer where city="san jose";

11. Match salespeople to customers according to what city they lived in.
-->select  c.cname,c.city,s.sname,s.city from customer c,salespeople s where c.snum=s.snum having c.city=s.city;

12.  Find the largest order taken by each salesperson.
 -->select max(o.amt),c.snum,o.odate from customer c,orders o where o.cnum=c.cnum group by o.cnum order by max(o.amt) desc;
--> select max(o.amt),c.snum,o.odate from customer c,orders o where o.cnum=c.cnum group by c.snum order by max(o.amt) desc;

13. Find customers in San Jose who have a rating above 200.
--> select * from customer where city="san jose"and rating=200;
14. List the names and commissions of all salespeople in London.
-->select sname,comm from salespeople where city="london";select
15. List all the orders of salesperson Motika from the Orders table.
--> select s.sname,o.onum,c.snum from orders o,customer c,salespeople s 
     where o.cnum=c.cnum and c.snum=s.snum having s.sname="motika" ;

16. Find all customers with orders on October 3.
--> select c.cname,o.cnum,o.onum,o.odate,dayname(o.odate) as day from orders o,customer c 
      where o.cnum=c.cnum having o.odate='1996-03-10';
17. Give the sums of the amounts from the Orders table, grouped by date, eliminating all those
dates where the SUM was not at least 2000.00 above the MAX amount.
-->select odate,sum(amt) from orders  group by odate having sum(amt)>2000;

18. Select all orders that had amounts that were greater than at least one of the orders from
October 6.
--> select o.onum,o.amt from orders o where o.amt>(select max(o.amt) from orders where o.odate='1996-06-10');
19. Write a query that uses the EXISTS operator to extract all salespeople who have customers
with a rating of 300.
-->select s.sname,c.snum,c.rating from customer c,salespeople s where c.snum=s.snum and
    EXISTS (select cnum,rating from customer where rating=300);

20. Find all pairs of customers having the same rating.
-->select rating,count(cname) from customer group by rating;

21. Find all customers whose CNUM is 1000 above the SNUM of Serres.
--> select cnum,cname from customer where cnum>(1002+1000);
--> select cnum,cname from customer where cnum>(select (snum+1000) from salespeople where sname="serres");

22. Give the salespeople’s commissions as percentages instead of decimal numbers.
-->select sname,(comm*100) as commper from salespeople;

23. Find the largest order taken by each salesperson on each date, eliminating those MAX orders
which are less than $3000.00 in value.
-->select o.onum,max(o.amt),o.cnum,c.snum from orders o,customer c where o.cnum=c.cnum group by c.snum having max(o.amt)>3000;

24. List the largest orders for October 3, for each salesperson.
--> select o.onum,max(o.amt),c.snum ,o.odate from orders o,customer c 
      where o.cnum=c.cnum and o.odate='1996-03-10' group by c.snum;

25. Find all customers located in cities where Serres (SNUM 1002) has customers.
-->select cnum,cname,city,snum from customer where snum=1002;
-->select c.cname,c.city,c.snum,s.sname from customer c,salespeople s where s.snum=c.snum and sname="serres";

26. Select all customers with a rating above 200.00.
--> select * from customer having rating>200 ;
 
27. Count the number of salespeople currently listing orders in the Orders table.
-->select o.onum,count(c.snum) from orders o,customer c where o.cnum=c.cnum group by o.cnum;

28. Write a query that produces all customers serviced by salespeople with a commission above
12%. Output the customer’s name and the salesperson’s rate of commission.
-->select c.cname,s.sname ,s.comm from customer c,salespeople s where c.snum=s.snum and s.comm>0.12;

29. Find salespeople who have multiple customers.
-->select snum,count(cnum)from customer group by snum having count(cnum)>1;

30. Find salespeople with customers located in their city.
 -->select c.cnum,c.cname,c.city,c.snum,s.sname,s.city from customer c,salespeople s where c.snum=s.snum having c.city=s.city;

31. Find all salespeople whose name starts with ‘P’ and the fourth character is ‘l’.
--> select * from salespeople where sname regexp '^[a-z]{3}l+' or sname like 'p%';

32. Write a query that uses a subquery to obtain all orders for the customer named Cisneros.
Assume you do not know his customer number.
-->select onum,amt from orders where cnum =(select cnum from customer where cname="cisneros");

33. Find the largest orders for Serres and Rifkin.
-->select max(o.amt),c.snum,s.sname from orders o,customer c,salespeople s where o.cnum=c.cnum and c.snum=s.snum 
     group by c.snum having s.sname="serres"or"rifkin";

34. Extract the Salespeople table in the following order : SNUM, SNAME, COMMISSION, CITY.
-->select snum,sname,comm,city from salespeople;

35. Select all customers whose names fall in between ‘A’ and ‘G’ alphabetical range.
-->select cname from customer where (cname>'a' and cname<'g');

36. Select all the possible combinations of customers that you can assign.
--> select o.onum,o.amt,o.odate,c.rating,s.snum from orders o,customer c,salespeople s where o.cnum=c.cnum and s.snum=c.snum group by o.cnum;

37. Select all orders that are greater than the average for October 4.

-->select onum,amt,odate from orders having amt>(select avg(amt) from orders where odate='1996-04-10') ;

38. Write a select command using a corelated subquery that selects the names and numbers of all
customers with ratings equal to the maximum for their city.
-->select max(rating),cname ,city from customer group by city order by max(rating) desc;

39. Write a query that totals the orders for each day and places the results in descending order.
-->select onum,sum(amt),odate from orders group by odate order by sum(amt) desc;

40. Write a select command that produces the rating followed by the name of each customer in
San Jose.
-->select rating,cnum,cname,city from customer where city="san jose";

41. Find all orders with amounts smaller than any amount for a customer in San Jose.
 select onum,amt,cnum from orders having 
amt<(select o.amt from orders o,customer c where o.cnum=c.cnum group by o.cnum having c.city="san jose");

42. Find all orders with above average amounts for their customers.
 select * from orders group by cnum having amt>(select avg(amt),cnum from orders group by cnum);

43. Write a query that selects the highest rating in each city.
-->select cname,max(rating),city from customer group by city;

44. Write a query that calculates the amount of the salesperson’s commission on each order by a
customer with a rating above 100.00.
-->select o.amt,o.cnum,c.cname,c.rating,c.snum,s.sname,s.comm,o.amt*s.comm  as commamt from orders o,customer c,salespeople s
     where o.cnum=c.cnum and c.snum=s.snum and c.rating>100;

45. Count the customers with ratings above San Jose’s average.
--> select count(rating) from customer where rating>(select avg(rating)from customer where city="san jose");

46. Write a query that produces all pairs of salespeople with themselves as well as duplicate rows
with the order reversed.
-->(select * from salespeople )union all (select * from salespeople)order by sname desc;

47. Find all salespeople that are located in either Barcelona or London.
-->select sname ,city from salespeople where city="barcelona"or"london";

48. Find all salespeople with only one customer.
-->select s.sname,s.snum from salespeople s,(select snum,count(*) as count from customer group by snum having count=1) c 
     where s.snum=c.snum;

49. Write a query that joins the Customer table to itself to find all pairs of customers served by a
single salesperson.
-->select * from customer a,customer b where a.cnum!=b.cnum and a.snum=b.asnum;
 
50. Write a query that will give you all orders for more than $1000.00
-->select onum,amt from orders where amt>1000;

51. Write a query that lists each order number followed by the name of the customer who made
that order.
-->select o.onum,c.cname from orders o,customer c where o.cnum=c.cnum;

52. Write 2 queries that select all salespeople (by name and number) who have customers in their
cities who they do not service, one using a join and one a corelated subquery. Which solution
is more elegant?
-->select c.city,c.cnum,s.city,s.snumfrom salespeople s ,customer c where s.snum=c.snum and c.city!=s.city;

53. Write a query that selects all customers whose ratings are equal to or greater than ANY (in the
SQL sense) of Serres’?
-->select c.cname,c.rating,s.sname from customer c,salespeople s where c.snum=s.snum and 
     rating>=(select max(rating) from customer ,salespeople where c.snum=s.snum  and s.sname="serres");

54. Write 2 queries that will produce all orders taken on October 3 or October 4.
-->select * from orders where odate='1996-03-10';
-->select * from orders where odate='1996-04-10';

55. Write a query that produces all pairs of orders by a given customer. Name that customer and
eliminate duplicates.
select distinct o.amt ,o.cnum,c.cname from orders o,customer c where o.cnum!=c.cnum;

56. Find only those customers whose ratings are higher than every customer in Rome.
-->select cname,cnum,rating from customer where rating>(select max(rating) from customer where city="rome");

57. Write a query on the Customers table whose output will exclude all customers with a rating <=
100.00, unless they are located in Rome.
-->select * from customer where rating>=100 or city="rome";

58. Find all rows from the Customers table for which the salesperson number is 1001.
-->select * from customer where snum=1001;

59. Find the total amount in Orders for each salesperson for whom this total is greater than the
amount of the largest order in the table.
--> select sum(o.amt) as tamt,o.cnum,s.snum from orders o,customer c,salespeople s where o.cnum=c.cnum and c.snum=s.snum
      group by s.snum having tamt>(select max(amt)from orders);

60. Write a query that selects all orders save those with zeroes or NULLs in the amount field.
-->select * from orders where amt=0;

61. Produce all combinations of salespeople and customer names such that the former precedes
the latter alphabetically, and the latter has a rating of less than 200.
-->select * from customer c,salespeople s where c.snum=s.snum and s.sname<c.cname and rating <200;

62. List all Salespeople’s names and the Commission they have earned.
-->select s.sname,s.comm,(o.amt*s.comm) as earned from salespeople s,orders o,customer c where o.cnum=c.cnum and s.snum=c.snum group by c.snum;

63. Write a query that produces the names and cities of all customers with the same rating as
Hoffman. Write the query using Hoffman’s CNUM rather than his rating, so that it would still be
usable if his rating changed.
-->select cname,rating from customer where rating=(select rating from customer where cname="hoffman");
-->select cname,rating from customer where rating=(select rating from customer where cnum=2001);

64. Find all salespeople for whom there are customers that follow them in alphabetical order.
-->select c.cname,s.sname from customer c,salespeople s where c.snum=s.snum order by s.sname ;

65. Write a query that produces the names and ratings of all customers of all who have above
average orders.
select cname,rating from customer having (select sum(amt) from orders group by cnum)>(select avg(amt) from orders) ;

66. Find the SUM of all purchases from the Orders table.
-->select sum(amt) from orders;

67. Write a SELECT command that produces the order number, amount and date for all rows in
the order table.
-->select onum,amt,odate from orders ;

68. Count the number of nonNULL rating fields in the Customers table (including repeats).
--> select count(rating) from customer where rating!=0;

69. Write a query that gives the names of both the salesperson and the customer for each order
after the order number.
--> select o.onum,c.cname,s.sname from orders o,customer c,salespeople s where o.cnum=c.cnum and c.snum=s.snum;

70. List the commissions of all salespeople servicing customers in London.
--> select s.sname,s.city,s.comm,(o.amt*s.comm),c.cname,c.city as earned from salespeople s,orders o,customer c where
      o.cnum=c.cnum and s.snum=c.snum and c.city="london" group by c.snum ;

71. Write a query using ANY or ALL that will find all salespeople who have no customers located in
their city.
-->select city,snum,sname from salespeople where all (select cnum from customer c,salespeople s where c.snum=s.snum and s.city!=c.city);
72. Write a query using the EXISTS operator that selects all salespeople with customers located in
their cities who are not assigned to them.
-->select * from customer c,salespeople s where EXISTS (select * from customer) and c.snum!=s.snum and c.city=s.city;
73. Write a query that selects all customers serviced by Peel or Motika. (Hint : The SNUM field
relates the two tables to one another.)
-->select c.cnum,c.cname from customer c,salespeople s where c.snum=s.snum and s.sname="peel"or"motika";

74. Count the number of salespeople registering orders for each day. (If a salesperson has more
than one order on a given day, he or she should be counted only once.)
-->select count(o.onum),c.snum from orders o,customer c,salespeople s where o.cnum=c.cnum and s.snum=c.snum group by c.snum,o.odate having count(o.onum)<=1;

75. Find all orders attributed to salespeople in London.
--> select o.onum,o.amt,c.cnum,s.snum,s.sname,s.city from orders o,customer c,salespeople s 
where o.cnum=c.cnum and c.snum=s.snum and s.city="london";
76. Find all orders by customers not located in the same cities as their salespeople.
-->select o.onum,c.cnum,c.cname from orders o,customer c,salespeople s where o.cnum=c.cnum and s.snum=c.snum and c.city!=s.city;

77. Find all salespeople who have customers with more than one current order.
-->select o.onum,o.amt,c.cnum,s.snum,s.sname from orders o,customer c,salespeople s where o.cnum=c.cnum and c.snum=s.snum and o.onum>1 group by s.snum;

78. Write a query that extracts from the Customers table every customer assigned to a
salesperson who currently has at least one other customer (besides the customer being
selected) with orders in the Orders table.
--> select o.onum,count(c.cnum),c.snum from customer c,orders o where o.cnum=c.cnum group by snum having count(c.cnum)>=1;

79. Write a query that selects all customers whose names begin with ‘C’.
-->select cname from customer where cname like ("c%");
80. Write a query on the Customers table that will find the highest rating in each city. Put the output
in this form : for the city (city) the highest rating is : (rating).
--> select max(rating),city as rating from customer group by city;

81. Write a query that will produce the SNUM values of all salespeople with orders currently in the
Orders table (without any repeats).
-->select o.onum,o.amt,c.cnum,s.snum from orders o,customer c,salespeople s 
     where o.cnum=c.cnum and s.snum=c.snum group by s.snum;

82. Write a query that lists customers in descending order of rating. Output the rating field first,
followed by the customer’s names and numbers.
--> select rating,cname,cnum from customer order by rating desc;

83. Find the average commission for salespeople in London.
-->select s.sname,s.city,c.snum,avg(o.amt*s.comm) from orders o,customer c,salespeople s 
     where o.cnum=c.cnum and s.snum=c.snum and s.city="london" group by s.snum;

84. Find all orders credited to the same salesperson who services Hoffman (CNUM 2001).
-->select o.onum,o.amt,c.cnum,c.cname,s.sname from orders o,customer c,salespeople s where o.cnum=c.cnum and s.snum=c.snum and cname="hoffman" group by cnum;

85. Find all salespeople whose commission is in between 0.10 and 0.12 (both inclusive).
-->select * from salespeople where (comm>=0.10 and comm<=0.12);
86. Write a query that will give you the names and cities of all salespeople in London with a
commission above 0.10.
-->select sname ,city,comm from salespeople  where city="london" and comm>0.10;

87. What will be the output from the following query?
SELECT * FROM ORDERS
where (amt < 1000 OR NOT (odate = 10/03/1996 AND cnum >
2003));

-->
+------+---------+------------+------+
| onum | amt     | odate      | cnum |
+------+---------+------------+------+
| 3001   |   18.69 | 1996-03-10 | 2008 |
| 3003  |  767.19 | 1996-03-10 | 2001 |
| 3005 | 5160.45 | 1996-03-10 | 2003 |
| 3006 | 1098.16 | 1996-04-10 | 2002 |
| 3007 |   75.75  | 1996-04-10   | 2002 |
| 3008 | 4723.00| 1996-05-10 | 2006 |
| 3010  | 1309.95 | 1996-06-10 | 2004 |
| 3011   | 9891.88 | 1996-06-10 | 2006 |
+------+---------+------------+------+

88. Write a query that selects each customer’s smallest order.
-->select min(amt) ,cnum from orders group by cnum;

89. Write a query that selects the first customer in alphabetical order whose name begins with G.
-->select cname from customer where cname like ("g%") ;

90. Write a query that counts the number of different nonNULL city values in the Customers table.
-->select count(city) from customer where city!=null;

91. Find the average amount from the Orders table.
-->select avg(amt) from orders;

92. What would be the output from the following query?
SELECT * FROM ORDERS
WHERE NOT (odate = 10/03/96 OR snum > 1006) AND amt >=
1500);
-->Unknown column 'snum' in 'where clause'

93. Find all customers who are not located in San Jose and whose rating is above 200.
--> select cnum,cname,rating,city from customer where city="san jose"and rating>200;

94. Give a simpler way to write this query :

+------+---------+-----------+------+
| snum | sname   | city      | comm |
+------+---------+-----------+------+
| 1001 | peel       | london     | 0.12   |
| 1002 | serres    | san jones | 0.13   |
| 1003 | axelrod  | new york | 0.10   |
| 1004 | motika  | london     | 0.11    |
| 1005 | fran       | london     | 0.26   |
| 1007 | rifkin     | barcelona | 0.15   |
+------+---------+-----------+------+

-->select * from salespeople;


95. Evaluate the following query :
SELECT * FROM orders
WHERE NOT ((odate = 10/03/96 AND snum > 1002) OR amt > 2000.00);
-->Unknown column 'snum' in 'where clause'

96. Which salespersons attend to customers not in the city they have been assigned to?
-->select c.cname,c.city,s.sname,s.city from customer c,salespeople s where c.snum=s.snum and c.city!=s.city;

97. Which salespeople get commission greater than 0.11 are serving customers rated less than
250?
-->select s.sname,s.comm,c.cname,c.rating from customer c,salespeople s where c.snum=s.snum having c.rating>250 and s.comm>0.11;

98. Which salespeople have been assigned to the same city but get different commission
percentages?
--> select a.snum,a.city,(o.amt*a.comm),b.snum,b.city,(o.amt*b.comm) from salespeople a,salespeople b,orders o,customer c 
      where o.cnum=c.cnum and a.snum=c.snum  and a.snum!=b.snum and a.city!=b.city and (o.amt*a.comm)!=(o.amt*b.comm);

99. Which salesperson has earned the most by way of commission?
--> select s.sname,c.snum,sum(o.amt*s.comm) as total from orders o,customer c,salespeople s where o.cnum=c.cnum and s.snum=c.snum
      group by c.snum order by total desc;

100.Does the customer who has placed the maximum number of orders have the maximum rating?
--> select count(o.onum),o.cnum,c.rating from orders o,customer c where o.cnum=c.cnum 
      and c.rating =(select max(rating) from customer group by c.cnum) group by o.cnum;

101.Has the customer who has spent the largest amount of money been given the highest rating?
-->NO
-->select max(o.amt),c.cnum,c.rating from orders o,customer c where o.cnum=c.cnum group by cnum  order by max(o.amt) desc ;

102.List all customers in descending order of customer rating.
-->select cname ,rating from customer order by rating desc;

103.On which days has Hoffman placed orders?
-->select o.odate,o.cnum,c.cname from orders o,customer c where o.cnum=c.cnum and cname="hoffman";

104.Do all salespeople have different commissions?
-->YES
-->select sum(o.amt*s.comm) as amt,s.sname from orders o,salespeople s,customer c where o.cnum=c.cnum and c.snum=s.snum  group by s.sname order by amt desc ;


105.Which salespeople have no orders between 10/03/1996 and 10/05/1996?
--> select o.amt,o.odate,c.snum,s.sname from orders o,customer c,salespeople s where o.cnum=c.cnum and c.snum=s.snum 
      and (odate>'1996-03-10' and odate<'1996-05-10') having o.amt=0;

106.How many salespersons have succeeded in getting orders?
-->select o.amt,o.cnum,c.snum,s.sname from orders o,customer c,salespeople s where o.cnum=c.cnum and c.snum=s.snum group by s.snum order by o.amt desc ;

107.How many customers have placed orders?
-->select count(cnum) from orders where onum!=0;

108.On which date has each salesperson booked an order of maximum value?
-->select distict c.snum,o.date,dayname(o.date),max(o.amt) as order count from orders o,customer c
where o.cnum=c.cnum group by o.cnum order by ordercount desc;

109.Who is the most successful salesperson?
-->select sum(o.amt),o.cnum,c.snum,s.sname from orders o,customer c,salespeople s where o.cnum=c.cnum and c.snum=s.snum group by s.snum order by sum(o.amt) desc limit 1;

110.Who is the worst customer with respect to the company?
-->select o.amt,o.cnum,c.cname from orders o,customer c where o.cnum=c.cnum group by o.cnum order by o.amt limit 1;

111.Are all customers not having placed orders greater than 200 totally been serviced by
salespersons Peel or Serres?
-->select o.onum,sum(o.amt),c.cnum,s.sname from orders o,customer c,salespeople s where o.cnum=c.cnum and c.snum=s.snum and s.sname="peel"or"serres"
     group by o.cnum having sum(o.amt)>200;

112.Which customers have the same rating?
-->select a.cname,a.rating,b.cname,b.rating from customer a,customer b where a.cnum=b.cnum and a.rating=b.rating;

113.Find all orders greater than the average for October 4th.
-->select onum,amt from orders where amt>(select avg(amt) from orders where odate='1996-04-10'group by cnum);

114.Which customers have above average orders?
-->select onum,cnum,amt from orders where amt>(select avg(amt) from orders);

115.List all customers with ratings above San Jose’s average.
-->select cname,rating from customer having rating>(select avg(rating) from customer where city="san jose");

116.Select the total amount in orders for each salesperson for whom the total is greater than the
amount of the largest order in the table.
--> select sum(o.amt) as total,c.snum from orders o,customer c where o.cnum=c.cnum 
      group by c.snum having total>(select max(amt) from orders);

117.Give names and numbers of all salespersons who have more than one customer.
-->select snum,count(cnum) from customer group by snum having count(cnum)>=1;

118.Select all salespersons by name and number who have customers in their city whom they
don’t service.
-->select c.cnum,c.cname,c.city,c.snum,s.sname,s.city from customer c,salespeople s where c.snum!=s.snum and c.city=s.city ;

119.Which customers’ rating should be lowered?
-->select o.amt,o.cnum,c.rating,c.cname from orders o,customer c where o.cnum=c.cnum group by o.cnum order by o.amt desc;
-->CISNEROS Rating should be lowered.

120.Is there a case for assigning a salesperson to Berlin?
-->No,Salesman already exist.
-->select * from customer where city="berlin";

121.Is there any evidence linking the performance of a salesperson to the commission that he or
she is being paid?
-->select o.odate,o.onum,(o.amt*s.comm) as perfamt,c.snum,s.city,s.sname from orders o,customer c,salespeople s where o.cnum=c.cnum and s.snum=c.snum 
     group by c.snum order by perfamt desc limit 5;

122.Does the total amount in orders by customer in Rome and London exceed the commission
paid to salespersons in London and New York by more than 5 times?
-->
123.Which is the date, order number, amt and city for each salesperson (by name) for the
maximum order he has obtained?
-->select o.odate,o.onum,max(o.amt),c.snum,s.city,s.sname from orders o,customer c,salespeople s where o.cnum=c.cnum and s.snum=c.snum  group by c.snum;

124.Which salesperson(s) should be fired?
--> select o.onum,o.amt,c.snum,s.sname,s.comm,(o.amt*s.comm) as camt from orders o,customer c,salespeople s where o.cnum=c.cnum and s.snum=c.snum 
      group by s.snum having s.comm<0.12;

125.What is the total income for the company?
-->select (select sum(amt) from orders)+(select sum(o.amt*s.comm) from orders o,customer c,salespeople s where o.cnum=c.cnum and s.snum=c.snum);

126.What is the Grossprofit of a company?
-->select(select sum(amt) from orders)-(select sum(o.amt*s.comm) as total from orders o,customer c,salespeople s where o.cnum=c.cnum and c.snum=s.snum) as grossprofit;
127.Find the contributor of each salesperson in percentage
-->select c.snum,s.sname,sum(o.amt) as total,(sum(o.amt*100)/(select sum(amt) from orders)) as salepercent from orders o,customer c,salespeople s
 where o.cnum=c.cnum and s.snum=c.snum group by c.snum order by total desc;
